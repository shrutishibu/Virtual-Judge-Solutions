Alice has an array of NN integers — A1,A2,…,ANA1​,A2​,…,AN​. She wants the product of all the elements of the array to be a non-negative integer. That is, it can be either 00 or positive. But she doesn't want it to be negative.
To do this, she is willing to remove some elements of the array. Determine the minimum number of elements that she will have to remove to make the product of the array's elements non-negative.

Input Format
The first line of input will contain a single integer TT, denoting the number of test cases.
The first line of each test case contains a single integer NN — the number of elements in the array originally.
The next line contains NN space-separated integers — A1,A2,…,ANA1​,A2​,…,AN​, which are the original array elements.

Output Format
For each test case, output on a new line the minimum number of elements that she has to remove from the array.

Constraints
    1≤T≤1001≤T≤100
    2≤N≤100002≤N≤10000
    −1000≤Ai≤1000−1000≤Ai​≤1000


//SOLUTION
#include<bits/stdc++.h>
using namespace std;
int main(){
    int t, n, x;
    cin>>t;
    while(t--){
        cin>>n;
        int s = 0, z = 0;
        while(n--){
            cin>>x;
            if(x<0){
                s += 1;
            }
            else if(x==0){
                 z = 1;
            }
        }
        if(s%2 == 0 || z==1)
            cout<<0;
        else
            cout<<1;
        cout<<endl;
    }
    return 0;
}